"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("inquirer"),t=require("fs"),a=require("chalk"),o=require("arg"),r=require("ora"),l=require("child_process"),n=require("edit-json-file"),c=require("https");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=i(e),u=i(t),p=i(a),d=i(o),m=i(r),g=i(n),f=i(c);function y(e,t){let a=g.default(e);a.set("name",t),a.save()}function $(e,t){u.default.readdirSync(e).forEach((a=>{const o=`${e}/${a}`,r=u.default.statSync(o);if(r.isFile()){const e=u.default.readFileSync(o,"utf8"),r=`${t}/${a}`;u.default.writeFileSync(r,e,"utf8")}else r.isDirectory()&&(u.default.mkdirSync(`${t}/${a}`),$(`${e}/${a}`,`${t}/${a}`))}))}const h="figma-react-plugin-template-js",v="figma-react-plugin-template-ts",j=process.cwd();let b;exports.createProjectTemplate=async e=>{let t=function(e){const t=d.default({"--typescript":Boolean,"--javascript":Boolean,"--currDir":Boolean,"--currentDirectory":"--currDir","--ts":"--typescript","--js":"--javascript"},{argv:e.slice(2)});return{typescript:t["--typescript"]||!1,javascript:t["--javascript"]||!1,currentDirectory:t["--currDir"]||!1}}(e);console.log(p.default.cyan.bold("What would you like the project to be called?"));const a=await s.default.prompt([{name:"name",type:"input",message:"Project name:",validate:e=>!!/^([a-z\-\_\d])+$/.test(e)||"Project name may only include lowecase letters, numbers, underscores and hashes."}]);!function(e,t){b=e?`${j}`:`${j}/${t}`}(t.currentDirectory,a.name),console.log(""),console.log(p.default.cyan.bold("What would you like the Figma plugin to be called?"));const o=await s.default.prompt([{name:"name",type:"input",message:"Figma plugin name:",default:a.name,validate:e=>!!/^([A-Za-z\-\_\d ])+$/.test(e)||"Plugin name may only include letters, numbers, underscores, hashes and spaces."}]);let r;t.typescript?r={template:"TypeScript"}:t.javascript?r={template:"JavaScript"}:(console.log(""),console.log(p.default.cyan.bold("Which template would you like your project to use?")),r=await s.default.prompt([{name:"template",type:"list",message:"Template:",choices:["JavaScript","TypeScript"],default:"JavaScript"}])),console.log(""),console.log(p.default.green.bold("Creating your project...")),console.log(""),console.log("P.S. This might take a bit");const n=a.name,c=o.name,i=function(e){if("JavaScript"===e)return`${__dirname}/../templates/${h}`;if("TypeScript"===e)return`${__dirname}/../templates/${v}`}(r.template);t.currentDirectory||u.default.mkdirSync(`${b}`),$(i,b),function(e){const t=u.default.createWriteStream(`${e}/.gitignore`);f.default.get("https://raw.githubusercontent.com/github/gitignore/master/Node.gitignore",(e=>{e.pipe(t)}))}(b),y(`${b}/manifest.json`,c),y(`${b}/package.json`,n);let g=await function(e,t){return new Promise((async(a,o)=>{console.log("");const r=m.default("Installing packages").start();let n,c;r.color="blue",r.text="Installing packages",e?(n="npm install",c="npm run dev"):(n=`cd ${t} && npm install`,c=`cd ${t} && npm run dev`),await l.exec(n,(function(e,t,l){r.stop(),a(c),l&&o(l),e&&o(e)}))}))}(t.currentDirectory,n);console.log(""),console.log("---------------------"),console.log(""),console.log(p.default.green.bold("Project successfully created")),console.log(p.default`Run '{magenta.bold ${g}}' to start the development server.`),console.log(""),console.log(p.default`Read the {bold Readme} for instructions on how to add your plugin to Figma for development`),console.log(""),console.log("---------------------")};
