"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("inquirer"),t=require("fs"),a=require("chalk"),o=require("arg"),l=require("ora"),r=require("child_process"),n=require("edit-json-file");function c(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=c(e),i=c(t),u=c(a),p=c(o),d=c(l),m=c(n);function f(e,t){let a=m.default(e);a.set("name",t),a.save()}function g(e,t){i.default.readdirSync(e).forEach((a=>{const o=`${e}/${a}`,l=i.default.statSync(o);if(l.isFile()){const e=i.default.readFileSync(o,"utf8"),l=`${t}/${a}`;i.default.writeFileSync(l,e,"utf8")}else l.isDirectory()&&(i.default.mkdirSync(`${t}/${a}`),g(`${e}/${a}`,`${t}/${a}`))}))}const y="figma-react-plugin-template-js",$="figma-react-plugin-template-ts",v=process.cwd();let h;exports.createProjectTemplate=async e=>{let t=function(e){const t=p.default({"--typescript":Boolean,"--javascript":Boolean,"--currDir":Boolean,"--currentDirectory":"--currDir","--ts":"--typescript","--js":"--javascript"},{argv:e.slice(2)});return{typescript:t["--typescript"]||!1,javascript:t["--javascript"]||!1,currentDirectory:t["--currDir"]||!1}}(e);console.log(u.default.cyan.bold("What would you like the project to be called?"));const a=await s.default.prompt([{name:"name",type:"input",message:"Project name:",validate:e=>!!/^([a-z\-\_\d])+$/.test(e)||"Project name may only include lowecase letters, numbers, underscores and hashes."}]);!function(e,t){h=e?`${v}`:`${v}/${t}`}(t.currentDirectory,a.name),console.log(""),console.log(u.default.cyan.bold("What would you like the Figma plugin to be called?"));const o=await s.default.prompt([{name:"name",type:"input",message:"Figma plugin name:",default:a.name,validate:e=>!!/^([A-Za-z\-\_\d ])+$/.test(e)||"Plugin name may only include letters, numbers, underscores, hashes and spaces."}]);let l;t.typescript?l={template:"TypeScript"}:t.javascript?l={template:"JavaScript"}:(console.log(""),console.log(u.default.cyan.bold("Which template would you like your project to use?")),l=await s.default.prompt([{name:"template",type:"list",message:"Template:",choices:["JavaScript","TypeScript"],default:"JavaScript"}])),console.log(""),console.log(u.default.green.bold("Creating your project...")),console.log(""),console.log("P.S. This might take a bit");const n=a.name,c=o.name,m=function(e){if("JavaScript"===e)return`${__dirname}/../templates/${y}`;if("TypeScript"===e)return`${__dirname}/../templates/${$}`}(l.template);t.currentDirectory||i.default.mkdirSync(`${h}`),g(m,h),f(`${h}/manifest.json`,c),f(`${h}/package.json`,n);let j=await function(e,t){return new Promise((async(a,o)=>{console.log("");const l=d.default("Installing packages").start();let n,c;l.color="blue",l.text="Installing packages",e?(n="npm install",c="npm run dev"):(n=`cd ${t} && npm install`,c=`cd ${t} && npm run dev`),await r.exec(n,(function(e,t,r){l.stop(),a(c),r&&o(r),e&&o(e)}))}))}(t.currentDirectory,n);console.log(""),console.log("---------------------"),console.log(""),console.log(u.default.green.bold("Project successfully created")),console.log(u.default`Run '{magenta.bold ${j}}' to start the development server.`),console.log(""),console.log(u.default`Read the {bold Readme} for instructions on how to add your plugin to Figma for development`),console.log(""),console.log("---------------------")};
